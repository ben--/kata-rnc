#!/bin/bash -eu
set -o pipefail

DOCKER_IMAGE=kata-rnc/build-rust

if [[ $DOCKER_IMAGE != ${DOCKER_CONTAINER-} ]]; then
    source_dir="$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")"

    echo -n "Base Docker: "
    docker build ${DOCKER_QUIET-} \
           --force-rm --rm=true \
           -t "$DOCKER_IMAGE" \
           "$source_dir/do/rust.docker"

    "$source_dir/do/create-user" "$DOCKER_IMAGE"

    output_dir="${source_dir}/build/rust"
    if [[ -e "$output_dir" ]]; then
        echo rm -rf "$output_dir"
        rm -rf "$output_dir"
    fi
    if [[ ! -d "$(dirname "$output_dir")" ]]; then
        mkdir -p "$(dirname "$output_dir")"
    fi

    tmp_output_dir="${source_dir}/src/rust/target"
    if [[ -e "$tmp_output_dir" ]]; then
        echo rm -rf "$tmp_output_dir"
        rm -rf "$tmp_output_dir"
    fi
    mkdir -p "$tmp_output_dir"

    tty=
    if [[ -t 1 ]]; then
        tty=-t
    fi
    set +e
    docker run $tty \
           --env DOCKER_CONTAINER=$DOCKER_IMAGE \
           --env "source_dir=$source_dir" \
           --rm \
           --sig-proxy=true \
           --volume="$source_dir:$source_dir:rw" \
           --workdir="$source_dir" \
           $DOCKER_IMAGE-user \
           "$source_dir/do/build-rust"
    RETCODE=$?

    mv "$tmp_output_dir" "$output_dir"

    exit "$RETCODE"
fi

cd src/rust
cargo build
